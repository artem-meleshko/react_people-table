{"version":3,"sources":["getDataFromServer.js","createClassForName.js","createClassForPerson.js","Person.js","PeopleTable.js","applySortBy.js","App.js","index.js"],"names":["getDataFromServer","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","expectedData","listOfPersons","wrap","_context","prev","next","fetch","sent","json","abrupt","map","person","index","objectSpread","id","century","Math","ceil","died","age","born","children","filter","child","father","name","mother","human","stop","apply","this","arguments","createClassForName","result","createClassForPerson","concat","sex","length","Person","react_default","createElement","className","join","PeopleTable","element","src_Person","key","sortedPersons","currentFiled","applySortBy","sortFiled","people","reverse","toConsumableArray","sort","b","localeCompare","App","state","visiblePersons","sortBy","_this","setState","prevState","_this2","type","onClick","src_PeopleTable","React","Component","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.1dd9b45c.chunk.js","sourcesContent":["const getDataFromServer = async() => {\n  const linkToServer = 'https://mate-academy.github.io/react_people-table/api/people.json';\n  const expectedData = await fetch(linkToServer);\n  const listOfPersons = await expectedData.json();\n\n  return listOfPersons.map((person, index) => ({\n    ...person,\n    id: index + 1,\n    century: (Math.ceil(person.died / 100)),\n    age: person.died - person.born,\n    children: listOfPersons\n      .filter(child => child.father === person.name\n      || child.mother === person.name)\n      .map(human => human.name),\n  }));\n};\n\nexport default getDataFromServer;\n","const createClassForName = (person) => {\n  let result = '';\n\n  if (person.born < 1650) {\n    result += `person__born-before`;\n  }\n\n  if (person.died > 1800) {\n    result += `person__died-after`;\n  }\n\n  return result;\n};\n\nexport default createClassForName;\n","const createClassForPerson = (person) => {\n  let result = `person person__lived-in-${person.century} `;\n\n  if (person.sex === 'f') {\n    result += ` person__female`;\n  }\n\n  if (person.sex === 'm') {\n    result += ` person__male`;\n  }\n\n  if (person.age >= 65) {\n    result += ` person__lived-65-and-more`;\n  }\n\n  if (person.sex === 'm' && person.children.length > 0) {\n    result += ` person__father`;\n  }\n\n  if (person.sex === 'f' && person.children.length > 0) {\n    result += ` person__mother`;\n  }\n  return result;\n};\n\nexport default createClassForPerson;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport createClassForName from './createClassForName';\nimport createClassForPerson from './createClassForPerson';\n\nimport './person.css';\n\nconst Person = ({ person }) => (\n  <tr className={createClassForPerson(person)}>\n    <td>{person.id}</td>\n    <td className={createClassForName(person)}>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.century}</td>\n    <td>{person.age}</td>\n    <td>{person.mother}</td>\n    <td>{person.father}</td>\n    <td>{person.children.join(', ')}</td>\n  </tr>\n);\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    sex: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    age: PropTypes.number,\n    mother: PropTypes.string,\n    father: PropTypes.string,\n    children: PropTypes.array,\n    century: PropTypes.number,\n  }).isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Person from './Person';\nimport './person.css';\n\nconst PeopleTable = ({ listOfPersons }) => (\n  <div>\n    <table className=\"people__table\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Century</th>\n          <th>Age</th>\n          <th>Mother</th>\n          <th>Father</th>\n          <th>Children</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {listOfPersons.map((element, index) => (\n          <Person person={element} index={index} key={element.id} />\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n\nPeopleTable.propTypes = {\n  listOfPersons: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PeopleTable;\n","let sortedPersons = [];\nlet currentFiled = '';\n\nconst applySortBy = ({ sortFiled, people }) => {\n  if (currentFiled === sortFiled) {\n    return sortedPersons.reverse();\n  }\n\n  currentFiled = sortFiled;\n\n  sortedPersons = [...people].sort((a, b) => {\n    switch (typeof a[sortFiled]) {\n      case 'string':\n        return a[sortFiled].localeCompare(b[sortFiled]);\n\n      case 'number':\n      case 'boolean':\n        return a[sortFiled] - b[sortFiled];\n\n      default:\n        return 0;\n    }\n  });\n\n  return sortedPersons;\n};\n\nexport default applySortBy;\n","import React from 'react';\nimport getDataFromServer from './getDataFromServer';\nimport PeopleTable from './PeopleTable';\n\nimport applySortBy from './applySortBy';\nimport './styles.css';\n\nclass App extends React.Component {\n  state = {\n    listOfPersons: [],\n    visiblePersons: [],\n    sortFiled: 'id',\n  };\n\n  async componentDidMount() {\n    const people = await getDataFromServer();\n    this.setState({\n      people,\n      visiblePersons: people,\n    });\n  }\n\n  sortBy = (sortFiled) => {\n    this.setState({\n      sortFiled,\n    });\n    this.setState(prevState => ({\n      visiblePersons: applySortBy(prevState),\n    }));\n  };\n\n  render() {\n    const { visiblePersons } = this.state;\n\n    return (\n      <section>\n        <div className=\"App\">\n          <h1>People table: {visiblePersons.length}</h1>\n        </div>\n\n        <div className=\"sort__buttons\">\n          <h2>\n            Sort by:\n          </h2>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('id')}\n            className=\"sort-buttons__btn\"\n          >\n            ID\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('name')}\n            className=\"sort-buttons__btn\"\n          >\n            Name\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('age')}\n            className=\"sort-buttons__btn\"\n          >\n            Age\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('born')}\n            className=\"sort-buttons__btn\"\n          >\n            Year of birth\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('died')}\n            className=\"sort-buttons__btn\"\n          >\n            Year of death\n          </button>\n        </div>\n\n        <PeopleTable listOfPersons={visiblePersons} />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App test={123} />, document.getElementById('root'));\r\n"],"sourceRoot":""}